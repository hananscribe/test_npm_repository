name: stg_new_env_my_npm_test

on: 
#     push:
    workflow_dispatch:

env:
     SCRIBE_URL: "https://airflow.staging.scribesecurity.com/"
     SCRIBE_LOGIN_URL: "https://scribe-hub-staging.us.auth0.com"
     SCRIBE_AUDIENCE: "api.staging.scribesecurity.com"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

 scribe-report-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
         
      - name: Scm generate bom, upload to scribe
        id: valint_bom_scm
        # uses: scribe-security/action-bom@master
        uses: scribe-security/action-bom@master
        with:
          type: dir
          target: ./
          verbose: 2
          scribe-enable: true
          format: attest
          scribe-client-id: ${{ secrets.SCRIBE_STG_NEW_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_STG_NEW_CLIENT_SECRET }}
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
          pipeline-name: "stg pipeline name"
          # app-name: "stg app name"
          # app-version: "1.0.0 stg"
          product-version: "version_sprintt37_2"
          components: metadata,layers,packages,syft,dep,commits

      - name: build image
        run: |
          docker build -t my-image:latest .
          
      - name: Read JSON file and set custom_env
        id: set_custom_env
        run: echo "custom_env=$(cat my_metdata_base.json)" >> $GITHUB_ENV
          
      - name: Image generate bom, upload to scribe
        id: valint_bom_image
        # uses: scribe-security/action-bom@master
        uses: scribe-security/action-bom@master
        with:
          type: docker
          target: my-image:latest
          format: attest
          # format: attest-cyclonedx-json
          # format: statement-cyclonedx-json
          verbose: 2
          scribe-enable: true
          scribe-client-id: ${{ secrets.SCRIBE_STG_NEW_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_STG_NEW_CLIENT_SECRET }}
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
          pipeline-name: "stg pipeline name"
          # app-name: "stg app name"
          # app-version: "1.0.0 stg"
          product-version: "version_sprintt37_2"
          env: user_metadata
          force: true
        env:
          user_metadata: ${{ env.custom_env }}

      - uses: actions/upload-artifact@v2
        with:
          name: scribe-reports
          path: |
            ${{ steps.valint_bom_scm.outputs.OUTPUT_PATH }}
            ${{ steps.valint_bom_image.outputs.OUTPUT_PATH }}
            
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        # uses: scribe-security/action-bom@master
        uses: scribe-security/action-bom@master
        with:
          target: mongo-express:1.0.0-alpha.4
#           format: statement-slsa
          format: attest-slsa
          # product-key: "0_stg_en_my_npm"

      - uses: actions/upload-artifact@v2
        with:
          name: provenance
          path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
