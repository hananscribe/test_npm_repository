name: cve_diff_source

on: 
  workflow_dispatch:
   inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - local
          - dev-demo
          - dev2_eks
          - dev_eks
          - ci_eks
          - test_eks
          - stg_eks
          - prod_eks
      product_version:
         description: 'Put product version'
         # required: true
         default: 'v1'
      product_name:
         description: 'Put product name'
         required: true
         default: 'cve_diff_source'
         
env:
  PRODUCT_NAME: ${{ github.event.inputs.product_name }}
  PRODUCT_VERSION: ${{ github.event.inputs.product_version }}
  IMAGE_NAME: ${{ github.event.inputs.image_name}}
  # VALINT_VERSION: "scribe-security/action-bom@${{ github.event.inputs.valint_version}}"
  SCRIBE_URL: ${{ vars.SCRIBE_URL }}
  SCRIBE_LOGIN_URL: ${{ vars.SCRIBE_LOGIN_URL }}
  AUTHOR_NAME: ALONA DODUKH
  AUTHOR_EMAIL: author@scribesecurity.com
  AUTHOR_PHONE: 999-1111-11
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: supplier@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  LABEL: github_cve
  
        

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate signed docker SBOM for 'apache/airflow:slim-2.8.0-python3.11'
        id: case1_sign
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                # type: docker
                target: apache/airflow:slim-2.8.0-python3.11
                scribe-enable: true
                format: attest
                attest-default: x509-env
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
                scribe-url: ${{ env.SCRIBE_URL}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}}
                supplier-phone: ${{env.SUPPLIER_PHONE }}
                # deliverable: true
                label: ${{env.LABEL}}
                gate: github_alona
                
        env:
            ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
            ATTEST_CERT: ${{ secrets.ATTEST_CERT}}
            ATTEST_CA:  ${{ secrets.ATTEST_CA }}   

      - name: Generate signed docker SBOM for 'apache/airflow:slim-2.8.0-python3.11'
        id: case2_statement-cyclonedx-json
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                # type: docker
                target: debian:trixie-slim
                scribe-enable: true
                format: statement-cyclonedx-json
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
                scribe-url: ${{ env.SCRIBE_URL}}
                scribe-auth-audience : ${{env.SCRIBE_AUDIENCE}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}}
                supplier-phone: ${{env.SUPPLIER_PHONE }}
                # deliverable: true
                label: ${{env.LABEL}}
                gate: github_alona
                           
     
      # - uses: actions/upload-artifact@v3
      #   with:
      #           name: provenance
      #           path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
          
                
                
