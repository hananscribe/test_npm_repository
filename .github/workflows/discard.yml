name: discard

on: 
  workflow_dispatch:
   inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - stg
          - prod
          - dev_eks
          - ci_eks
          - test_eks
          - stg_eks
          - prod_eks
      product_version:
         description: 'Put product version'
         # required: true
         default: '0.0.0'
      product_name:
         description: 'Put product name'
         required: true
         default: 'Discard'
      image_name:
         description: 'Put your image name'
         required: true
         default: 'mongo-express:latest'

         
env:
  PRODUCT_NAME: ${{ github.event.inputs.product_name }}
  PRODUCT_VERSION: ${{ github.event.inputs.product_version }}
  IMAGE_NAME: ${{ github.event.inputs.image_name}}
  # VALINT_VERSION: "scribe-security/action-bom@${{ github.event.inputs.valint_version}}"
  SCRIBE_URL: ${{ vars.SCRIBE_URL }}
  SCRIBE_LOGIN_URL: ${{ vars.SCRIBE_LOGIN_URL }}
  SCRIBE_AUDIENCE: ${{ vars.SCRIBE_AUDIENCE }}
  AUTHOR_NAME: ALONA DODUKH
  AUTHOR_EMAIL: author@scribesecurity.com
  AUTHOR_PHONE: 999-1111-11
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: supplier@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  LABEL: github
  
        

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate not signed docker SBOM for docker image
        id: signed_docker_image
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                type: docker
                target: ${{env.IMAGE_NAME}}
                scribe-enable: true
                format: statement-cyclonedx-json
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}_mongo-express:latest
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: ${{ env.SCRIBE_URL}}
                scribe-audience: ${{env.SCRIBE_AUDIENCE}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}}
                supplier-phone: ${{env.SUPPLIER_PHONE }}
                # deliverable: true
                label: $LABEL
                gate: github_alona
              

      - name: Generate not signed docker SBOM for docker image
        id: signed_docker_image_mongo2
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                type: docker
                target: mongo-express:1.0-18-alpine3.19
                # target: $IMAGE_NAME
                scribe-enable: true
                format: statement-cyclonedx-json
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}_mongo-express:1.0-18-alpine3.19
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: ${{ env.SCRIBE_URL}}
                scribe-audience: ${{env.SCRIBE_AUDIENCE}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}}
                supplier-phone: ${{env.SUPPLIER_PHONE }}
                label: $LABEL
                gate: github_alona


      - name: Discard evidence  mongo-express:1.0-18-alpine3.19
        id: valint_discard
        uses: scribe-security/action-discard@master
        with:
           verbose: 2
           type: docker
           target: mongo-express:1.0-18-alpine3.19
           scribe-enable: true
           product-key: ${{env.PRODUCT_NAME}}
           product-version: ${{env.PRODUCT_VERSION}}_mongo-express:1.0-18-alpine3.19
           scribe-client-id: ${{ secrets.CLIENT_ID }}
           scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
           scribe-url: ${{ env.SCRIBE_URL}}
           scribe-audience: ${{env.SCRIBE_AUDIENCE}}
           silent: true
  
           
      - name: Generate signed docker SBOM for docker image
        id: signed_docker_image_mysql
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                type: docker
                target: mysql:latest
                # target: $IMAGE_NAME
                scribe-enable: true
                format: attest
                attest-default: x509-env
                # product-key: $PRODUCT_NAME
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}_mysql:latest
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: ${{ env.SCRIBE_URL}}
                scribe-audience: ${{env.SCRIBE_AUDIENCE}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}}
                supplier-phone: ${{env.SUPPLIER_PHONE }}
                # deliverable: true
                label: $LABEL
                gate: github_alona
                
        env:
            ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
            ATTEST_CERT: ${{ secrets.ATTEST_CERT}}
            ATTEST_CA:  ${{ secrets.ATTEST_CA }} 
       # valint verify busybox:latest -i attest --attest.default=x509 --ca <my_ca.pem>
     
      - name: Verify Image using x509 keys
        uses: scribe-security/action-verify@master
        with:
               target: mysql:latest
               scribe-enable: true
               components: packages,files,dep
               format: attest
               attest-default: x509-env
               product-key: ${{env.PRODUCT_NAME}}
               product-version: ${{env.PRODUCT_VERSION}}_mysql:latest
               scribe-client-id: ${{ secrets.CLIENT_ID }}
               scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
               scribe-url: ${{ env.SCRIBE_URL}}
               scribe-audience: ${{env.SCRIBE_AUDIENCE}}
               author-name: ${{env.AUTHOR_NAME}}
               author-email: ${{env.AUTHOR_EMAIL}}
               author-phone: ${{env.AUTHOR_PHONE}}
               supplier-name: ${{env.SUPPLIER_NAME}}
               supplier-url: ${{env.SUPPLIER_URL}}
               supplier-email: ${{env.SUPPLIER_EMAIL}}
               supplier-phone: ${{env.SUPPLIER_PHONE }}
               # common-name: "Scribe Security CA" - right now we have Githun issue to take only character before space
               email: "alona@scribesecutiry.com"
               push: true
               verbose: 2
               DEBUG: true
               label: $LABEL
               gate: github_alona
        env:
            ATTEST_CA: ${{ secrets.ATTEST_CA }}
            ATTEST_CERT: ${{ secrets.ATTEST_CERT }}     

      
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        uses: scribe-security/action-bom@master
        with:
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: $IMAGE_NAME
                # attest-slsa, statement-slsa, attest-generic
                scribe-enable: true
                format: attest-slsa
                attest-default: x509-env
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: ${{env.SCRIBE_URL}}
                # scribe-login-url: $SCRIBE_LOGIN_URL
                scribe-audience: ${{env.SCRIBE_AUDIENCE}}
                gate: github_alona
                # deliverable: true
        env:
            ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
            ATTEST_CERT: ${{ secrets.ATTEST_CERT}}
            ATTEST_CA:  ${{ secrets.ATTEST_CA }}  
                
      - uses: actions/upload-artifact@v3
        with:
                name: provenance
                path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
                
